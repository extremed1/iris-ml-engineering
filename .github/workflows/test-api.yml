name: Test FastAPI Application

on:
  pull_request:
    branches:
      - main
    paths:
      - app/main.py

env:
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  IMAGE_TAG: pr-${{ github.event.pull_request.number }}

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}

      - name: Build Docker image (but don't push)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true #Load locally instead of pushing
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run FastAPI contiainer and test API endpoint
        run: |
          docker run -d --name api_test_container -p 80:80 ${{steps.meta.outputs.tags}}

          echo "Waiting for API to start..."
          sleep 5

          echo "Hitting the API endpoint..."
          curl --fail http://localhost:80/health

          if [ $? -ne 0 ]; then
            echo "API health check failed!"
            exit 1
          else
            echo "API is healthy!"
          fi

      - name: Stop and remove test container
        if: always() # Ensure cleanup happens even if tests fail
        run: docker rm -f api_test_container || true
